{"mappings":"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","sources":["src/index.ts","src/canvas.ts","src/style.ts","src/core.ts"],"sourcesContent":["export {CanvasSurface} from \"./canvas\";\nconsole.log(\"starting the library\")","import {StandardTextColor, StandardTextHeight, StandardTextStyle} from \"./style\";\nimport {\n    Callback,\n    FOCUS_GAINED,\n    FOCUS_LOST,\n    FocusEvent,\n    KEYBOARD_DOWN,\n    KEYBOARD_UP,\n    KeyboardEvent, Modifiers,\n    ParentView, Point,\n    POINTER_DOWN,\n    POINTER_DRAG, POINTER_MOVE,\n    POINTER_UP,\n    PointerEvent, Rect,\n    SCROLL_EVENT,\n    ScrollEvent, Size,\n    View\n} from \"./core\";\nimport {Sheet, Sprite, SpriteGlyph, Tilemap} from \"../../spritesheet_editor/apps/tileeditor/app-model\";\n\nexport function log(...args) {\n    console.log('SNAKE:', ...args);\n}\n\nconst CLEAR_COLOR = '#f0f0f0'\n\nexport function rect_from_pos_size(point: Point, size: Size) {\n    return new Rect(\n        point.x,\n        point.y,\n        size.w,\n        size.h\n    )\n}\n\nclass MouseInputService {\n    private surface: SurfaceContext;\n    private down: boolean;\n    private path: [];\n    private last_point: Point;\n    private target: never;\n    constructor(surface: CanvasSurface) {\n        this.surface = surface\n        this.down = false\n        this.last_point = new Point(0,0)\n    }\n    trigger_mouse_down(position:Point, button:number) {\n        this.down = true;\n        this.last_point = position\n        this.path = this.scan_path(position)\n        this.target = this.path[this.path.length-1] // last\n        let evt = new PointerEvent(this.surface, POINTER_DOWN, position, new Point(0,0))\n        evt.button = button\n        evt.target = this.target\n        this.propagatePointerEvent(evt,this.path)\n        this.surface.repaint()\n    }\n\n    trigger_mouse_move(position: Point, button: number) {\n        let delta = position.subtract(this.last_point)\n        this.last_point = position.clone()\n        let evt\n        if(this.down) {\n            evt = new PointerEvent(this.surface, POINTER_DRAG, position, delta)\n        } else {\n            this.path = this.scan_path(position)\n            evt = new PointerEvent(this.surface, POINTER_MOVE, position, delta)\n        }\n        evt.button = button\n        evt.target = this.path[this.path.length - 1] // last\n        this.propagatePointerEvent(evt, this.path)\n        this.surface.repaint()\n    }\n\n    trigger_mouse_up(position: Point, button: number) {\n        this.down = false\n        let evt = new PointerEvent(this.surface, POINTER_UP, position, new Point(0,0))\n        evt.button = button\n        evt.target = this.path[this.path.length-1] // last\n        this.propagatePointerEvent(evt,this.path)\n        this.surface.repaint()\n    }\n\n    trigger_scroll(position:Point, delta:Point) {\n        this.path = this.scan_path(position)\n        let evt = new ScrollEvent(this.surface, SCROLL_EVENT, position, delta)\n        this.propagateScrollEvent(evt,this.path)\n    }\n\n    private calculate_path_to_cursor(view: View, position: Point, path:View[]):boolean {\n        // this.log('searching for',position,'on',view.name())\n        if(!view) return false\n        if (!view.visible()) return false\n        let bounds = rect_from_pos_size(view.position(),view.size())\n        if (bounds.contains(position)) {\n            // @ts-ignore\n            if (view.is_parent_view && view.is_parent_view()) {\n                let parent = view as unknown as ParentView;\n                // go in reverse order to the top drawn children are picked first\n                for (let i = parent.get_children().length-1; i >= 0; i--) {\n                    let ch = parent.get_children()[i]\n                    let pos = position.subtract(view.position())\n                    let picked = this.calculate_path_to_cursor(ch,pos,path)\n                    if(picked) {\n                        path.unshift(ch)\n                        return true\n                    }\n                }\n                if(parent.can_receive_mouse()) {\n                    return true\n                }\n            } else {\n                return true\n            }\n        }\n        return false\n    }\n\n    private log(...args) {\n        console.log('MouseService:',...args)\n    }\n\n    private scan_path(position: Point) {\n        let path:[] = []\n        this.calculate_path_to_cursor(this.surface.root(),position,path)\n        // this.log(\"final path is\",path)\n        return path\n    }\n\n    private propagatePointerEvent(evt: PointerEvent, path: []) {\n        let stopped = false\n        let pt = evt.position\n\n        path.forEach((view:View) => {\n            if(stopped) {\n                this.log(\"done\")\n                return\n            }\n            // this.log(\"down: view\",view.name())\n            evt.position = evt.position.subtract(view.position())\n            view.input(evt)\n            if(evt.stopped) {\n                stopped = true\n            }\n        })\n    }\n\n    private propagateScrollEvent(evt: ScrollEvent, path: []) {\n        let stopped = false\n        let pt = evt.position.clone()\n        evt.direction = \"down\"\n        path.forEach((view:View) => {\n            if(stopped) {\n                return\n            }\n            evt.position = evt.position.subtract(view.position())\n            view.input(evt)\n            if(evt.stopped) {\n                stopped = true\n            }\n        })\n        if(stopped) return;\n        path.reverse()\n        evt.direction = \"up\"\n        path.forEach((view:View) => {\n            if(stopped) {\n                // this.log(\"done\")\n                return\n            }\n            evt.position = evt.position.add(view.position())\n            view.input(evt)\n            if(evt.stopped) {\n                stopped = true\n            }\n        })\n    }\n\n}\n\nclass KeyboardInputService {\n    private surface: CanvasSurface;\n    private log(...args) {\n        console.log('KeyboardService:',...args)\n    }\n    constructor(surface:CanvasSurface) {\n        this.surface = surface\n    }\n\n    dispatch_keyboard_focus_change(old_focus: View, new_focus: View) {\n        let e_old = new FocusEvent(this.surface, FOCUS_LOST)\n        //send focus lost to old focus\n        if(old_focus) old_focus.input(e_old)\n        //send focus gained to new focus\n        let e_new = new FocusEvent(this.surface, FOCUS_GAINED)\n        if(new_focus) new_focus.input(e_new)\n        //don't use a path, no one can intercept?\n    }\n\n    private calculate_path_to_keyboard_focus(root:View, target: View): View[]|boolean {\n        if(!root) return false\n        if(!root.visible()) return false\n        if(root === target) return [root]\n        // @ts-ignore\n        if (root.is_parent_view && root.is_parent_view()) {\n            let parent = root as unknown as ParentView;\n            for (let i = parent.get_children().length-1; i >= 0; i--) {\n                let ch = parent.get_children()[i]\n                // this.log('checking child',ch)\n                let res = this.calculate_path_to_keyboard_focus(ch,target)\n                if(res) {\n                    (res as View[]).unshift(root)\n                    return res as View[]\n                }\n            }\n        }\n    }\n\n    trigger_key_down(key: string, code: string, modifiers: Modifiers) {\n        let evt = new KeyboardEvent(this.surface, KEYBOARD_DOWN)\n        evt.key = key\n        evt.code = code\n        evt.modifiers = modifiers\n        let path = this.calculate_path_to_keyboard_focus(this.surface.root(),this.surface.keyboard_focus()) as View[]\n        this.surface.propagateKeyboardEvent(evt, path)\n        this.surface.repaint()\n    }\n\n    trigger_key_up(key: string, code: string, modifiers: Modifiers) {\n        let evt = new KeyboardEvent(this.surface, KEYBOARD_UP)\n        evt.key = key\n        evt.code = code\n        evt.modifiers = modifiers\n        let path = this.calculate_path_to_keyboard_focus(this.surface.root(),this.surface.keyboard_focus()) as View[]\n        this.surface.propagateKeyboardEvent(evt, path)\n        this.surface.repaint()\n\n    }\n}\n\nexport interface SurfaceContext {\n    size():Size;\n    root():View;\n    set_root(root:View);\n    repaint();\n    clear();\n    fill(rect: Rect, color: string);\n    stroke(rect: Rect, color: string);\n    fillBackgroundSize(size:Size, color: string);\n    strokeBackgroundSize(size: Size, color: string);\n    measureText(caption: string, font_name?:string):Size;\n    fillStandardText(caption: string, x: number, y: number, font_name?:string, scale?:number);\n    draw_glyph(codepoint: number, x:number, y:number, font_name: string, fill: string, scale?:number);\n\n    keyboard_focus():View;\n    set_keyboard_focus(view:View);\n    is_keyboard_focus(view:View);\n    release_keyboard_focus(view:View);\n    view_to_local(pt: Point, view: View):Point;\n    find_by_name(name:string):View|null;\n}\nexport class CanvasSurface implements SurfaceContext {\n    private w: number;\n    private h: number;\n\n    size(): Size {\n        return new Size(this.w,this.h)\n    }\n\n    private canvas: HTMLCanvasElement;\n    private _root: View;\n    ctx: CanvasRenderingContext2D;\n    debug: boolean;\n    private scale: number;\n    private _input_callback: Callback;\n    protected _keyboard_focus: View;\n    private fonts:Map<string,CanvasFont>\n    private global_smoothing = true\n    private _pointer_target: View|null;\n    private mouse: MouseInputService;\n    private keyboard: KeyboardInputService;\n\n    constructor(w: number, h: number, scale?:number) {\n        this.log(\"making canvas \",w,h)\n        this.w = w;\n        this.h = h;\n        this.scale = this.scale || 1\n        this.canvas = document.createElement('canvas');\n        this.canvas.width = w * window.devicePixelRatio * this.scale\n        this.canvas.height = h * window.devicePixelRatio * this.scale\n        this.log(\"real canvas is\",this.canvas.width,this.canvas.height)\n        this.canvas.setAttribute('tabindex', '0');\n        //turn this on for high-dpi support\n        this.canvas.style.width = `${this.w * this.scale}px`\n        this.canvas.style.height = `${this.h * this.scale}px`\n        this.log(\"canvas style = \", this.canvas.style)\n        this.ctx = this.canvas.getContext('2d');\n        this.debug = false;\n        this.clear()\n        this.fonts = new Map()\n        this._pointer_target = null\n    }\n\n    addToPage() {\n        document.body.appendChild(this.canvas);\n    }\n    set_root(root: View) {\n        this._root = root;\n    }\n    root():View {\n        return this._root\n    }\n\n    repaint() {\n        if(this.debug) console.time(\"repaint\");\n        this.layout_stack();\n        this.clear();\n        this.draw_stack()\n        if(this.debug) console.timeEnd(\"repaint\");\n    }\n\n    clear() {\n        this.ctx.fillStyle = CLEAR_COLOR\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    private layout_stack() {\n        if(!this._root) {\n            console.warn(\"root is null\")\n        } else {\n            let available_size = new Size(this.w,this.h)\n            // this.log(\"layout_stack with size\",available_size)\n            let size = this._root.layout(this, available_size)\n            // console.log(\"canvas, root requested\",size)\n        }\n    }\n    private draw_stack() {\n        this.ctx.imageSmoothingEnabled = this.global_smoothing\n        this.ctx.save();\n        this.ctx.translate(0.5, 0.5);\n        this.ctx.scale(window.devicePixelRatio, window.devicePixelRatio)\n        this.ctx.scale(this.scale, this.scale)\n        this.debug_draw_rect(new Rect(0, 0, this.w - 1, this.h - 1), 'canvas')\n        if(this._root) this.draw_view(this._root)\n        this.ctx.restore()\n    }\n\n    private draw_view(view: View) {\n        this.ctx.save();\n        let pos = view.position()\n        this.ctx.translate(pos.x, pos.y)\n        // @ts-ignore\n        // console.log(\"drawing\",view.id,view.name())\n        if(view.visible()) {\n            view.draw(this);\n        }\n        // @ts-ignore\n        if (view.is_parent_view && view.is_parent_view() && view.visible()) {\n            let parent = view as unknown as ParentView;\n            if(parent.clip_children()) {\n                this.ctx.beginPath()\n                let size = view.size()\n                this.ctx.rect(0,0,size.w,size.h);\n                this.ctx.clip()\n            }\n            parent.get_children().forEach(ch => {\n                if (this.debug) {\n                    this.ctx.save();\n                }\n                this.draw_view(ch);\n                if (this.debug) {\n                    this.ctx.restore()\n                }\n            })\n        }\n        let bds = rect_from_pos_size(view.position(),view.size())\n        // @ts-ignore\n        this.debug_draw_rect(bds, view.name())\n        this.ctx.restore()\n    }\n\n    fill(rect: Rect, color: string) {\n        this.ctx.fillStyle = color\n        this.ctx.fillRect(rect.x, rect.y, rect.w, rect.h);\n    }\n\n    stroke(rect: Rect, color: string) {\n        this.ctx.lineWidth = 1 * this.scale\n        this.ctx.strokeStyle = color\n        this.ctx.strokeRect(rect.x, rect.y, rect.w, rect.h);\n    }\n    fillBackgroundSize(size:Size, color: string) {\n        this.ctx.fillStyle = color\n        this.ctx.fillRect(0, 0, size.w, size.h);\n    }\n    strokeBackgroundSize(size: Size, color: string) {\n        this.ctx.strokeStyle = color\n        this.ctx.strokeRect(0,0, size.w, size.h);\n    }\n    private debug_draw_rect(bds: Rect, title: string) {\n        if (!this.debug) return\n        this.ctx.strokeStyle = 'black'\n        this.ctx.lineWidth = 0.5;\n        let cx = bds.x + bds.w/2\n        let cy = bds.y + bds.h/2\n        for (let i = 0; i < 3; i++) {\n            this.ctx.beginPath()\n            this.ctx.strokeStyle = (i % 2 === 1) ? 'red' : 'black'\n            this.ctx.rect(bds.x + i, bds.y + i, bds.w - i * 2, bds.h - i * 2);\n            this.ctx.stroke()\n        }\n        let str = `${title} (${bds.x.toFixed(1)},${bds.y.toFixed(1)}) (${bds.w.toFixed(1)}x${bds.h.toFixed(1)})`\n        for (let i = 0; i < 3; i++) {\n            this.ctx.font = '10px sans-serif';\n            this.ctx.fillStyle = 'white'\n            this.ctx.fillText(str, cx+3 + i, cy+3 + i)\n        }\n        for (let i = 0; i < 1; i++) {\n            this.ctx.font = '10px sans-serif';\n            this.ctx.fillStyle = 'black'\n            this.ctx.fillText(str, cx+3 + i + 1, cy+3 + i + 1)\n        }\n    }\n    fillRect(x: number, y: number, w: number, h: number, color: string) {\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x,y,w,h)\n    }\n    private screen_to_local(evt: MouseEvent):Point {\n        let rect = this.canvas.getBoundingClientRect();\n        let pt = new Point(evt.x-rect.x,evt.y-rect.y);\n        pt.x /= this.scale\n        pt.y /= this.scale\n        return pt\n    }\n\n    propagateKeyboardEvent(evt: KeyboardEvent, path:View[]) {\n        if(!this._keyboard_focus) {\n            // if(this._input_callback) this._input_callback(evt)\n            return\n        }\n        if(!path) {\n            this.log(\"no path, can't propagate\")\n            return\n        }\n        let stopped = false\n        path.forEach((view:View) => {\n            if(stopped) {\n                this.log(\"bailing out early\")\n                return\n            }\n            view.input(evt)\n            if(evt.stopped) stopped = true\n        })\n        // if(this._keyboard_focus) this._keyboard_focus.input(evt)\n        // if(this._input_callback) this._input_callback(evt)\n    }\n\n    keyboard_focus(): View {\n        return this._keyboard_focus\n    }\n    set_keyboard_focus(view:View) {\n        let old = this._keyboard_focus\n        this._keyboard_focus = view\n        this.keyboard.dispatch_keyboard_focus_change(old,this._keyboard_focus)\n    }\n    is_keyboard_focus(view:View) {\n        return view === this._keyboard_focus\n    }\n    release_keyboard_focus(view:View) {\n        this._keyboard_focus = null\n    }\n\n    on_input(cb: Callback) {\n        this._input_callback = cb\n    }\n\n    measureText(caption: string, font_name?:string):Size {\n        if(font_name && this.fonts.has(font_name)) {\n            let font = this.fonts.get(font_name)\n            if(font) {\n                return font.measureText(caption)\n            }\n        }\n        this.ctx.font = StandardTextStyle\n        let metrics = this.ctx.measureText(caption)\n        if('fontBoundingBoxAscent' in metrics) {\n            return new Size(metrics.width, metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent);\n        }\n        return new Size(metrics.width, 16);\n    }\n    fillStandardText(caption: string, x: number, y: number, font_name?:string, scale?:number) {\n        if(!scale) scale = 1\n        if(font_name && this.fonts.has(font_name)) {\n            let font = this.fonts.get(font_name)\n            if(font) {\n                font.fillText(this.ctx,caption,x,y-StandardTextHeight,scale)\n                return\n            }\n        }\n        this.ctx.fillStyle = StandardTextColor\n        this.ctx.font = StandardTextStyle\n        this.ctx.fillText(caption,x, y)\n    }\n    draw_glyph(codepoint: number, x:number, y:number, font_name: string, fill: string, scale?:number) {\n        if(!scale) scale = 1\n        this.ctx.fillStyle = fill\n        if(font_name && this.fonts.has(font_name)) {\n            let font = this.fonts.get(font_name)\n            if(font) {\n                font.draw_glpyh(this.ctx,codepoint,x,y,scale)\n            }\n        }\n    }\n    private log(...args) {\n        console.log(\"CANVAS: \", ...args)\n    }\n\n    load_jsonfont(basefont_data: any, name:string, ref_name: string) {\n        let fnt = basefont_data.fonts.find(ft => ft.name === name)\n        this.fonts.set(ref_name,new CanvasFont(fnt))\n    }\n\n    draw_sprite(x: number, y: number, sprite: Sprite, scale: number) {\n        this.ctx.drawImage(sprite._img,x,y,sprite._img.width*scale,sprite._img.height*scale)\n    }\n\n    draw_tilemap(tilemap: Tilemap, sheet:Sheet, x: number, y: number, scale: number) {\n        tilemap.forEachPixel((val,i,j) => {\n            if (!val || val === 0) return;\n            // let sheet = this.doc.get_selected_sheet()\n            let tile = sheet.sprites.find((t:Sprite) => t.id ===val);\n            this.ctx.imageSmoothingEnabled = false\n            if(tile) {\n                this.ctx.drawImage(tile._img,x+i*scale,y+j*scale, scale, scale)\n            }\n        })\n\n    }\n\n    public find_by_name(name: string):View|null {\n        return this.find_by_name_view(this._root,name)\n    }\n\n    private find_by_name_view(view: View, name: string):View|null {\n        if (view.name() === name) return view\n        // @ts-ignore\n        if (view.is_parent_view && view.is_parent_view()) {\n            let parent = view as unknown as ParentView;\n            // go in reverse order to the top drawn children are picked first\n            for (let i = parent.get_children().length - 1; i >= 0; i--) {\n                let ch = parent.get_children()[i]\n                let res = this.find_by_name_view(ch,name)\n                if(res) return res\n            }\n        }\n        return null\n    }\n\n    public local_to_view(pt: Point, view: View) {\n        let trans = this.calculate_transform_to(this._root,view)\n        let f = pt.subtract(trans)\n        return f\n    }\n    private calculate_transform_to(root:View,view:View):Point {\n        if(root === view) {\n            return root.position().clone()\n        }\n        // @ts-ignore\n        if (root.is_parent_view && root.is_parent_view()) {\n            let parent = root as unknown as ParentView;\n            for(let i=0; i<parent.get_children().length; i++) {\n                let ch = parent.get_children()[i]\n                let ptx = this.calculate_transform_to(ch,view)\n                if(ptx) {\n                    return ptx.add(root.position())\n                }\n            }\n        }\n        return null\n    }\n\n    public view_to_local(pt: Point, view: View) {\n        let trans = this.calculate_transform_to(this._root,view)\n        return pt.add(trans)\n    }\n\n    private _setup_mouse_input() {\n        this.mouse = new MouseInputService(this)\n        this.canvas.addEventListener('contextmenu',(e)=>{\n            e.preventDefault();\n            return false;\n        })\n        this.canvas.addEventListener('mousedown',(domEvent:MouseEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            this.mouse.trigger_mouse_down(position, domEvent.button)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        })\n        this.canvas.addEventListener('mousemove',(domEvent:MouseEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            this.mouse.trigger_mouse_move(position, domEvent.button)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        })\n        this.canvas.addEventListener('mouseup',(domEvent:MouseEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            this.mouse.trigger_mouse_up(position, domEvent.button)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        })\n        this.canvas.addEventListener('wheel',(domEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            let delta = new Point(domEvent.deltaX, domEvent.deltaY)\n            this.mouse.trigger_scroll(position, delta)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        });\n    }\n    private _setup_keyboard_input() {\n        this.keyboard = new KeyboardInputService(this)\n        document.addEventListener('keydown',(e)=>{\n            let modifiers:Modifiers = {\n                alt: e.altKey,\n                ctrl: e.ctrlKey,\n                meta: e.metaKey,\n                shift: e.shiftKey\n            }\n            this.keyboard.trigger_key_down(e.key, e.code, modifiers)\n            if(!e.altKey && !e.metaKey) e.preventDefault()\n        })\n        document.addEventListener('keyup',(e) => {\n            let modifiers:Modifiers = {\n                alt: e.altKey,\n                ctrl: e.ctrlKey,\n                meta: e.metaKey,\n                shift: e.shiftKey\n            }\n            this.keyboard.trigger_key_up(e.key, e.code, modifiers)\n            if(!e.altKey && !e.metaKey) e.preventDefault()\n        })\n    }\n\n    start() {\n        this.addToPage()\n        this._setup_mouse_input();\n        this._setup_keyboard_input()\n        this.repaint()\n    }\n}\n\nclass CanvasFont {\n    private data: any;\n    private metas:Map<number,SpriteGlyph>\n    private scale = 2;\n    constructor(data) {\n        this.data = data\n        this.metas = new Map()\n        this.data.glyphs.forEach(gl => {\n            this.generate_image(gl)\n            this.metas.set(gl.meta.codepoint,gl)\n        })\n    }\n    measureText(text) {\n        let xoff = 0\n        let h = 0\n        for(let i=0; i<text.length; i++) {\n            let cp = text.codePointAt(i)\n            if(this.metas.has(cp)) {\n                let glyph = this.metas.get(cp)\n                let sw = glyph.w - glyph.meta.left - glyph.meta.right\n                xoff += sw + 1\n                h = Math.max(h,glyph.h)\n            } else {\n                xoff += 10\n                h = Math.max(h,10)\n            }\n        }\n        return new Size(xoff*this.scale,h*this.scale)\n    }\n\n    fillText(ctx:CanvasRenderingContext2D, text:string,x:number,y:number, scale?:number) {\n        if(!scale) scale = 1\n        ctx.fillStyle = 'red'\n        let size = this.measureText(text)\n        let xoff = 0\n        let yoff = 2\n        // ctx.fillRect(x+xoff, y+yoff, size.w, size.h)\n        for (let i = 0; i < text.length; i++) {\n            let cp = text.codePointAt(i)\n            let dx = x + xoff*this.scale*scale\n            if (this.metas.has(cp)) {\n                let glyph = this.metas.get(cp)\n                ctx.imageSmoothingEnabled = false\n                //@ts-ignore\n                let img = glyph.img\n                let sx = glyph.meta.left\n                let sy = 0\n                let sw = glyph.w - glyph.meta.left - glyph.meta.right\n                let sh = glyph.h //- glyph.meta.baseline\n                let dy = y + (yoff+glyph.meta.baseline-1)*this.scale*scale\n                let dw = sw*this.scale*scale\n                let dh = sh*this.scale*scale\n                ctx.drawImage(img, sx,sy,sw,sh, dx,dy, dw,dh)\n                xoff += sw + 1\n            } else {\n                //missing the glyph\n                let ew = 8\n                let dy = y + (yoff)*this.scale*scale\n                ctx.strokeRect(dx,dy,ew*this.scale*scale,ew*this.scale*scale)\n                xoff += ew + 1\n\n            }\n        }\n    }\n\n    draw_glpyh(ctx:CanvasRenderingContext2D, cp:number, x:number, y:number, scale?:number) {\n        let xoff = 0\n        let yoff = 2\n        if(this.metas.has(cp)) {\n            let glyph = this.metas.get(cp)\n            ctx.imageSmoothingEnabled = false\n            //@ts-ignore\n            let img = glyph.img\n            let sx = glyph.meta.left\n            let sy = 0\n            let sw = glyph.w - glyph.meta.left - glyph.meta.right\n            let sh = glyph.h //- glyph.meta.baseline\n            let dx = x + xoff*this.scale*scale\n            let dy = y + (yoff+glyph.meta.baseline-1)*this.scale*scale\n            let dw = sw*this.scale*scale\n            let dh = sh*this.scale*scale\n            ctx.drawImage(img, sx,sy,sw,sh, dx,dy, dw,dh)\n        }\n    }\n\n    private generate_image(gl) {\n        gl.img = document.createElement('canvas')\n        gl.img.width = gl.w\n        gl.img.height = gl.h\n        let c = gl.img.getContext('2d')\n        c.fillStyle = 'green'\n        c.fillRect(0,0,gl.img.width,gl.img.height)\n        for (let j = 0; j < gl.h; j++) {\n            for (let i = 0; i < gl.w; i++) {\n                let n = j * gl.w + i;\n                let v = gl.data[n];\n                if(v %2 === 0) {\n                    c.fillStyle = 'white'\n                    // c.fillRect(i, j, 1, 1)\n                    c.clearRect(i,j,1,1)\n                }\n                if(v%2 === 1) {\n                    c.fillStyle = 'black'\n                    c.fillRect(i, j, 1, 1)\n                }\n            }\n        }\n    }\n}\n","export const ButtonBackgroundColor_active = '#a3e3ff';\nexport const ButtonBackgroundColor_selected = '#36baec';\nexport const ButtonBackgroundColor = '#e3e3e0';\nexport const ButtonBorderColor = '#949492';\nexport const StandardSelectionColor = ButtonBackgroundColor_active\nexport const StandardTextColor = '#444'\nexport const StandardTextStyle  = '16px sans-serif'\nexport const StandardTextHeight = 20\nexport const StandardVerticalMargin = 10\nexport const StandardLeftPadding = 5\nexport const StandardPanelBackgroundColor = '#f0f0f0'\n\n","import {SurfaceContext} from \"./canvas\";\n\ntype EventCategory = string\ntype EventType = string\ntype EventDirection = \"down\" | \"up\"\n\nexport class CoolEvent {\n    type:EventType\n    category:EventCategory\n    timestamp:number\n    details:any\n    ctx:SurfaceContext\n    target:any\n    direction:EventDirection\n    stopped: any;\n\n    constructor(ctx: SurfaceContext, category:EventCategory, type:EventType) {\n        this.ctx = ctx\n        this.category = category\n        this.type = type\n    }\n}\n\nexport type Modifiers = {\n    shift:boolean\n    alt:boolean\n    ctrl:boolean\n    meta:boolean\n}\n\nexport const POINTER_CATEGORY:EventCategory = \"POINTER_CATEGORY\"\nexport const POINTER_MOVE:EventType = \"POINTER_MOVE\"\nexport const POINTER_DRAG:EventType = \"POINTER_DRAG\"\nexport const POINTER_DOWN:EventType = \"POINTER_DOWN\"\nexport const POINTER_UP:EventType = \"POINTER_UP\"\nexport const PRIMARY_BUTTON:number = 0\nexport const SECONDARY_BUTTON:number = 2\n\nexport function gen_id(prefix: string) {\n    return `${prefix}_${Math.floor(Math.random() * 100000)}`\n}\n\nexport type Callback = (any) => any;\n\nexport class SuperArray {\n    private data: any[];\n\n    constructor() {\n        this.data = []\n    }\n\n    clear() {\n        this.data = []\n    }\n\n    push_end(value: any) {\n        this.data.push(value)\n    }\n\n    length() {\n        return this.data.length\n    }\n\n    pop_start() {\n        return this.data.shift()\n    }\n\n    forEach(cb: Callback) {\n        // @ts-ignore\n        this.data.forEach((v, i) => cb(v, i))\n    }\n}\n\nexport class Point {\n    x: number\n    y: number\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    translate(x: number, y: number) {\n        return new Point(this.x - x, this.y - y)\n    }\n\n    divide_floor(scale: number) {\n        return new Point(\n            Math.floor(this.x / scale),\n            Math.floor(this.y / scale)\n        )\n    }\n\n    add(pt: Point) {\n        return new Point(\n            this.x + pt.x,\n            this.y + pt.y,\n        )\n    }\n\n    set(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    copy_from(pt: Point) {\n        this.x = pt.x\n        this.y = pt.y\n    }\n\n    clone() {\n        return new Point(this.x, this.y)\n    }\n\n    subtract(trans: Point) {\n        return new Point(\n            this.x - trans.x,\n            this.y - trans.y\n        )\n    }\n\n    toString(): String {\n        return `Point(${this.x},${this.y})`\n    }\n}\n\nexport class Rect {\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n\n    contains(pt: Point): boolean {\n        if (pt.x < this.x) return false;\n        if (pt.y < this.y) return false;\n        if (pt.x >= this.x + this.w) return false;\n        if (pt.y >= this.y + this.h) return false;\n        return true;\n    }\n\n    bottom() {\n        return this.y + this.h;\n    }\n\n    right() {\n        return this.x + this.w;\n    }\n\n    shrink(v: number): Rect {\n        return new Rect(this.x + v, this.y + v, this.w - v - v, this.h - v - v)\n    }\n}\n\nexport class Size {\n    w: number;\n    h: number;\n\n    constructor(w, h) {\n        this.w = w\n        this.h = h\n    }\n\n    shrink(pad: number) {\n        return new Size(this.w - pad * 2, this.h - pad * 2)\n    }\n\n    grow(pad: number) {\n        return new Size(this.w + pad * 2, this.h + pad * 2)\n    }\n\n    subtract(delta: Point) {\n        return new Size(this.w - delta.x, this.h - delta.y)\n    }\n\n    add(delta: Point) {\n        return new Size(this.w + delta.x, this.h + delta.y)\n    }\n\n    contains(cursor: Point): boolean {\n        if (cursor.x < 0) return false\n        if (cursor.y < 0) return false\n        if (cursor.x > this.w) return false\n        if (cursor.y > this.h) return false\n        return true\n    }\n\n    toString(): String {\n        return `${this.w}x${this.h}`\n    }\n\n    equals(s: Size) {\n        return this.w === s.w && this.h === s.h\n    }\n}\n\nexport class PointerEvent extends CoolEvent {\n    position:Point\n    delta:Point\n    button:number\n    modifiers:Modifiers\n\n    constructor(ctx:SurfaceContext, type: EventType, position: Point, delta:Point) {\n        super(ctx, POINTER_CATEGORY, type);\n        this.position = position\n        this.delta = delta\n        this.direction = 'down'\n    }\n}\n\nexport const KEYBOARD_CATEGORY:EventCategory = \"KEYBOARD_CATEGORY\"\nexport const KEYBOARD_DOWN:EventType = 'KEYBOARD_DOWN'\nexport const KEYBOARD_UP:EventType = 'KEYBOARD_UP'\nexport class KeyboardEvent extends CoolEvent {\n    key:string\n    code:string\n    modifiers:Modifiers\n    constructor(surface: SurfaceContext, type:EventType) {\n        super(surface, KEYBOARD_CATEGORY, type);\n    }\n}\n\nexport const SCROLL_CATEGORY:EventCategory = \"SCROLL_CATEGORY\"\nexport const SCROLL_EVENT:EventType = \"SCROLL_EVENT\"\nexport class ScrollEvent extends CoolEvent {\n    delta:Point\n    position:Point\n    modifiers:Modifiers\n\n    constructor(surface: SurfaceContext, type: EventType, position: Point, delta: Point) {\n        super(surface, SCROLL_CATEGORY, type)\n        this.position = position\n        this.delta = delta\n    }\n}\n\nexport const FOCUS_CATEGORY:EventCategory = \"FOCUS_CATEGORY\"\nexport const FOCUS_GAINED:EventType = \"FOCUS_GAINED\"\nexport const FOCUS_LOST:EventType = \"FOCUS_LOST\"\nexport class FocusEvent extends CoolEvent {\n    constructor(surface: SurfaceContext, FOCUS_GAINED: EventType) {\n        super(surface, FOCUS_CATEGORY, FOCUS_GAINED);\n    }\n}\n\nexport const COMMAND_CATEGORY:EventCategory = \"COMMAND_CATEGORY\"\nexport const COMMAND_ACTION:EventType = \"action\"\nexport class CommandEvent extends CoolEvent {\n    constructor(ctx: SurfaceContext, type: EventType, target: any) {\n        super(ctx, COMMAND_CATEGORY, type);\n        this.target = target\n    }\n}\nexport const COMMAND_CHANGE:EventType = \"change\"\nexport type Action = { caption: string }\n\nexport const CLIPBOARD_CATEGORY:EventCategory = \"CLIPBOARD_CATEGORY\"\nexport const CLIPBOARD_COPY:EventType = \"ClipboardCopy\"\nexport const CLIPBOARD_CUT:EventType = \"ClipboardCut\"\nexport const CLIPBOARD_PASTE:EventType = \"ClipboardPaste\"\nexport class ClipboardEvent extends CoolEvent {\n    content:any\n    mimetype:string\n}\n\nexport interface View {\n    hflex(): boolean\n    vflex(): boolean\n    size():Size\n    set_size(size:Size)\n    position():Point\n    set_position(point:Point)\n    layout(g: SurfaceContext, available: Size): Size\n    draw(g: SurfaceContext): void\n    visible(): boolean\n    input(event: CoolEvent): void\n    on(type: string, cb: Callback): void\n    off(type: string, cb: Callback): void\n    name(): string\n}\n\nexport interface ParentView {\n    is_parent_view(): boolean,\n\n    get_children(): View[]\n    find_child(id:string):View|null\n\n    clip_children(): boolean,\n    // should the parent be counted as a mouse focus\n    can_receive_mouse(): boolean\n\n}\n\nexport abstract class BaseParentView implements View, ParentView {\n    protected _hflex: boolean\n    protected _vflex: boolean\n    id: string\n    protected _visible: boolean\n    protected _children: View[]\n    private _listeners: Map<string, Callback[]>\n    protected _name: string\n    private _size: Size;\n    private _position: Point;\n\n    constructor(id: string) {\n        this.id = id\n        this._size = new Size(100,100)\n        this._position = new Point(0,0)\n        this._children = []\n        this._name = 'unnamed'\n        this._listeners = new Map<string, Callback[]>()\n        this._visible = true\n        this._hflex = false\n        this._vflex = false\n    }\n\n    hflex(): boolean {\n        return this._hflex\n    }\n    set_hflex(hflex) {\n        this._hflex = hflex\n    }\n    vflex(): boolean {\n        return this._vflex\n    }\n    set_vflex(vflex) {\n        this._vflex = vflex\n    }\n\n    protected log(...args) {\n        console.log(this.name(), ...args)\n    }\n\n    size():Size {\n        return this._size\n    }\n    set_size(size: Size) {\n        this._size = size\n    }\n    position(): Point {\n        return this._position\n    }\n    set_position(point: Point) {\n        this._position = point\n    }\n\n    clip_children(): boolean {\n        return false;\n    }\n\n    draw(g: SurfaceContext): void {\n    }\n\n    get_children(): View[] {\n        return this._children\n    }\n    find_child(id: string): View|null {\n        // @ts-ignore\n        return this.get_children().find((ch:View) => ch.id === id)\n    }\n\n    add(view: View) {\n        this._children.push(view)\n    }\n\n    remove(view: View) {\n        this._children = this._children.filter(ch => ch !== view)\n    }\n\n    input(event: CoolEvent): void {\n    }\n\n    is_parent_view(): boolean {\n        return true\n    }\n\n    name(): string {\n        return this._name\n    }\n    set_name(name:string) {\n        this._name = name\n    }\n\n\n    on(type: string, cb: Callback) {\n        this._get_listeners(type).push(cb)\n    }\n\n    off(type: string, cb: Callback) {\n        this._listeners.set(type, this._get_listeners(type).filter(c => c != cb))\n    }\n\n    fire(type: string, payload: any) {\n        this._get_listeners(type).forEach(cb => cb(payload))\n    }\n\n    visible(): boolean {\n        return this._visible\n    }\n\n    abstract layout(g: SurfaceContext, available: Size): Size\n\n    private _get_listeners(type: string) {\n        if (!this._listeners.has(type)) this._listeners.set(type, [])\n        return this._listeners.get(type)\n    }\n\n    can_receive_mouse(): boolean {\n        return false;\n    }\n}\n\nexport abstract class BaseView implements View {\n    protected _hflex: boolean;\n    protected _vflex: boolean;\n    protected _visible: boolean\n    protected _name: string\n    private _listeners: Map<string, Callback[]>\n    protected id: string;\n    private _size: Size;\n    private _position: Point;\n\n    constructor(id: string) {\n        this.id = id\n        this._size = new Size(100,100)\n        this._position = new Point(0,0)\n        this._visible = true\n        this._name = 'unnamed'\n        this._listeners = new Map<string, Callback[]>()\n        this._hflex = false\n        this._vflex = false\n    }\n\n    hflex(): boolean {\n        return this._hflex\n    }\n    vflex(): boolean {\n        return this._vflex\n    }\n\n    protected log(...args) {\n        console.log(`${this.name()}:`, ...args)\n    }\n\n    private _get_listeners(type: string) {\n        if (!this._listeners.has(type)) this._listeners.set(type, [])\n        return this._listeners.get(type)\n    }\n\n    on(type: string, cb: Callback) {\n        this._get_listeners(type).push(cb)\n    }\n\n    off(type: string, cb: Callback) {\n        this._listeners.set(type, this._get_listeners(type).filter(c => c != cb))\n    }\n\n    fire(type: string, payload: any) {\n        this._get_listeners(type).forEach(cb => cb(payload))\n    }\n\n    size():Size {\n        return this._size\n    }\n    set_size(size: Size) {\n        this._size = size\n    }\n    position(): Point {\n        return this._position\n    }\n    set_position(point: Point) {\n        this._position = point\n    }\n\n    input(event: CoolEvent): void {\n    }\n\n    name(): string {\n        return this._name\n    }\n    set_name(name:string) {\n        this._name = name\n    }\n\n    visible(): boolean {\n        return this._visible\n    }\n\n    abstract layout(g: SurfaceContext, available: Size): Size\n\n    abstract draw(g: SurfaceContext): void\n}\n\nexport function with_props(comp: View, json: any): View {\n    if (!json) throw new Error(\"null json object\")\n    if (!comp) throw new Error(\"null component\")\n    Object.keys(json).forEach((key: string) => {\n        //already handled type\n        if (key === 'type') return\n        //handle children separately\n        if (key === 'children') return\n        //id is a property instead of a setter\n        if (key === 'id') {\n            // @ts-ignore\n            comp.id = json.id\n            return\n        }\n        let setter = `set_${key}`\n        // console.log(\"setting\",key,setter)\n        if (comp[setter]) {\n            comp[setter](json[key])\n        } else {\n            console.log(\"no setter\", setter)\n        }\n    })\n    return comp\n}\n\nexport function with_action(view: View, cb: Callback): View {\n    view.on(COMMAND_ACTION, cb)\n    return view\n}"],"names":[],"version":3,"file":"index.js.map"}